#!/usr/bin/env ruby
# frozen_string_literal: true

require "grpc"

gen_files_abs_path = File.join(Dir.pwd, "generated")
$LOAD_PATH.unshift(gen_files_abs_path)

rpc_path = File.join(Dir.pwd, "rpc")
$LOAD_PATH.unshift(rpc_path)

app_path = File.join(Dir.pwd, "app")
$LOAD_PATH.unshift(app_path)

require 'grpc'
require 'constants'
require "simple_service/v1/simple_retry_api_controller"

def main
  port = RUBY_SERVER_PORT
  if ARGV.length >= 1
    port = ARGV[0]
  end

  host = "0.0.0.0:#{port}"
  server = GRPC::RpcServer.new

  server.add_http2_port(host, :this_port_is_insecure)
  puts "... running insecurely on #{port}"

  server.handle(SimpleService::V1::SimpleRetryApiController)

  # Runs the server with SIGHUP, SIGINT and SIGTERM signal handlers to
  #   gracefully shutdown.
  # User could also choose to run server via call to run_till_terminated
  server.run_till_terminated_or_interrupted([1, 'int', 'SIGTERM'])
end

main
# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simple_service/v1/simple_retry_api.proto

require 'google/protobuf'


descriptor_data = "\n(simple_service/v1/simple_retry_api.proto\x12\x11simple_service.v1\"b\n\x16RetriableActionRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x34\n\x0crespond_with\x18\x02 \x03(\x0b\x32\x1e.simple_service.v1.RespondWith\"F\n\x17RetriableActionResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x17\n\x0fnumber_attempts\x18\x02 \x01(\x05\"\"\n\x0bRespondWith\x12\x13\n\x0bstatus_code\x18\x01 \x01(\r2|\n\x0eSimpleRetryAPI\x12j\n\x0fRetriableAction\x12).simple_service.v1.RetriableActionRequest\x1a*.simple_service.v1.RetriableActionResponse\"\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module SimpleService
  module V1
    RetriableActionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("simple_service.v1.RetriableActionRequest").msgclass
    RetriableActionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("simple_service.v1.RetriableActionResponse").msgclass
    RespondWith = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("simple_service.v1.RespondWith").msgclass
  end
end
